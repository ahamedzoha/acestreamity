services:
  # Ace Stream Engine
  acestream-engine:
    build:
      context: .
      dockerfile: Dockerfile.acestream
    container_name: acestream-engine
    ports:
      - '6878:6878'
    volumes:
      # Use tmpfs for cache to avoid disk thrashing
      - type: tmpfs
        target: /cache
        tmpfs:
          size: 1G
    environment:
      - ACESTREAM_CACHE_DIR=/cache
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '3'
    networks:
      - ace-stream-network
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '-f',
          'http://localhost:6878/webui/api/service?method=get_version',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development database (SQLite doesn't need a separate container in dev)
  # But we'll use a volume to persist data
  db-init:
    image: alpine:latest
    container_name: db-init
    volumes:
      - db-data:/app/data
    command: sh -c "mkdir -p /app/data && touch /app/data/channels.db"
    networks:
      - ace-stream-network

volumes:
  db-data:
    driver: local

networks:
  ace-stream-network:
    driver: bridge
